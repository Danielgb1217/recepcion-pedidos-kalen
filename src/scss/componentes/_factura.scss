@use 'base/variables' as v;
@use 'base/mixins' as m;


.encabezado-factura{
display: block;
text-align: center;
    @include m.telefono
    {
        display: grid;
    
        //grid-template-columns: repeat(5, 1fr);
        grid-template-columns: 4fr 1fr;
        justify-content: space-between;
        min-height: 10vh;
    }



}

.encabezado-cliente{ 
    text-align: center;
    @include m.telefono{
        inline-size: fit-content;
    }   
    
}

.tabla-factura{
    // width: 100%!important;
    // border: 1px solid rgb(237, 240, 246)!important;

    // th, td {
    //     text-align: center!important;
    //     width: 25% !important;
    //     //text-align: left;
    //     vertical-align: top!important;
    //     border: 1px solid rgb(237, 240, 246)!important;
    //  }

    @media
    only screen 
    and (max-width: 760px), (min-device-width: 768px) 
    and (max-device-width: 1024px)  {

      /* Force table to not be like tables anymore */
      table, thead, tbody, th, td, tr {
          display: block;
          //border-collapse:collapse;
      }

      /* Hide table headers (but not display: none;, for accessibility) */
      thead tr {
          position: absolute;
          top: -9999px;
          left: -9999px;
      }

  tr {
    margin: 0 0 1rem 0;
  }
    
  // tr:nth-child(odd) {
  //   background: #ccc;
  // }
  
      td {
          /* Behave  like a "row" */
          //border: none;
          border-bottom: 1px solid #eee;
          position: relative;
          padding-left: 50%;
      }

      td:before {
          /* Now like a table header */
          position: absolute;
          /* Top/left values mimic padding */
          top: 0;
          left: 6px;
          width: 45%;
          padding-right: 10px;
          white-space: nowrap;
          //border: none;
      }

      /*
      Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
      */
      td:nth-of-type(1):before { content: "Producto"; }
      td:nth-of-type(2):before { content: "Cantidad"; }
      td:nth-of-type(3):before { content: "Fecha Compra"; }
      td:nth-of-type(4):before { content: "Costo Unidad"; }
      td:nth-of-type(5):before { content: "Costo Total"; }
      td:nth-of-type(6):before { content: " "; }
      


  }






}

.item-factura{
text-align: center;
margin-bottom: 3rem;

}

.grid-cinco{
    display: block;
@include m.telefono{
    @include m.tablet{
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: 0.2rem; /*Separacion entre las columnas del grid column-gap y row-gap*/     
    }
}

}